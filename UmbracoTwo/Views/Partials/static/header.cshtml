@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper
@using Umbraco.Cms.Core
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider
@{
    var rootContent = UmbracoHelper.ContentAtRoot();
    var settings = rootContent?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;
    var logotype = settings?.Value<IPublishedContent>("logo")?.Url() ?? null;

    var selection = Model.Root().Children.Where(x => x.IsVisible(PublishedValueFallback)).ToArray();
}
<header>
    <div class="container">
        <a class="logotype" href="/"><img src="@logotype" alt=""></a>
        <div id="nav-bar">
            <nav class="nav-menu">
                @if (selection?.Length > 0) 
                {    
                    @foreach (var item in selection) 
                    {
                        <a class="@(item.IsAncestorOrSelf(Model) ? "nav-link active" : "nav-link")" href="@item.Url(PublishedUrlProvider)" title="@item.Name">@item.Name</a>
                    }
                }

            </nav>
        </div>
        <div class="search">
            <i class="fa-solid fa-magnifying-glass"></i>
        </div>
    </div>
</header>