@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper
@{
    var rootContent = UmbracoHelper.ContentAtRoot();
    var settings = rootContent?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;
    var socialMediaPlatforms = settings?.Value<IEnumerable<Umbraco.Cms.Core.Models.Blocks.BlockListItem>>("socialMediaPlatforms") ?? null;
}

@if(socialMediaPlatforms != null) {
    <div class="topheader">
        <p>Klarabergsviadukten 90, 111 64 Stockholm</p>
        <div class="socialmedia">
        @foreach (var social in socialMediaPlatforms) {
            var platformName = social?.Content?.Value<string>("platformName");
            var platformAccountUrl = social?.Content?.Value<string>("platformAccountUrl") ?? "#";

                switch(platformName.ToLower()) {
                    case "facebook":
                    <a href="@platformAccountUrl" title="platformAccountUrl" target="_blank" class="socialmedia-item"><i class="fa-brands fa-facebook-f"></i></a>
                    break;
                    case "twitter":
                    <a href="@platformAccountUrl" title="platformAccountUrl" target="_blank" class="socialmedia-item twitter"><i class="fa-brands fa-x-twitter"></i></a>
                    break;
                    case "linkedin":
                    <a href="@platformAccountUrl" title="platformAccountUrl" target="_blank" class="socialmedia-item"><i class="fa-brands fa-linkedin-in"></i></a>
                    break;
                }
        }
        </div>
    </div>
}